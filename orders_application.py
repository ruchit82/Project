# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MdY6gYPnVec23hU9TjQlKZd3ixAExiEy
"""
# Adjusted function to combine image and text dynamically
def combine_image_with_text_dynamic(image, details_list):
    font_path = "/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf"  # Adjust to your environment
    max_text_width = 300
    font_size = 16

    # Calculate required height based on text
    total_text_height = sum([26 * len(details) for details in details_list]) + 20  # Adjust line spacing
    canvas_height = max(image.height, total_text_height, 450)
    canvas_width = image.width + max_text_width

    # Create the canvas
    combined_image = Image.new("RGB", (canvas_width, canvas_height), "white")
    draw = ImageDraw.Draw(combined_image)

    # Draw the text details on the left
    y_position = 10
    for details in details_list:
        for key, value in details.items():
            draw.text((10, y_position), f"{key}: {value}", fill="black", font=ImageFont.truetype(font_path, size=font_size))
            y_position += 26  # Line spacing
        y_position += 10  # Add extra space between entries

    # Paste the image on the right
    combined_image.paste(image, (max_text_width, 0))

    return combined_image

# Adjusted Streamlit app
if menu == "Add New Order":
    st.title("Add New Order")

    if "details_list" not in st.session_state:
        st.session_state.details_list = []

    image_file = st.file_uploader("Upload Order Image", type=["jpg", "png"])

    # Input fields for order details
    Date = st.date_input("Date", value=datetime.today().date())
    Party_code = st.text_input("Party Code")
    Party_name = st.text_input("Party Name")
    Order_no = st.text_input("Order No")
    Weight = st.text_input("Weight")
    Size = st.text_input("Size")
    PCS = st.text_input("PCS")
    Rhodium = st.text_input("Rhodium (Yes/No)")
    Remark = st.text_area("Remark")

    if st.button("Add More Details"):
        details = {
            "Date": str(Date),
            "Party Code": Party_code if Party_code else "N/A",
            "Order No": Order_no if Order_no else "N/A",
            "Party Name": Party_name if Party_name else "N/A",
            "Weight": Weight if Weight else "N/A",
            "Size": Size if Size else "N/A",
            "PCS": PCS if PCS else "N/A",
            "Rhodium": Rhodium if Rhodium else "N/A",
            "Remark": Remark if Remark else "N/A",
        }
        st.session_state.details_list.append(details)
        st.success("Details added. You can add more or finalize the order.")

    if st.button("Submit"):
        if not st.session_state.details_list:
            st.error("No details added. Please add order details first.")
        else:
            image = None
            if image_file:
                image = Image.open(image_file)
                image = resize_image(image)

            # Combine image and details
            if image:
                combined_image = combine_image_with_text_dynamic(image, st.session_state.details_list)
                timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
                output_image_path = f"combined_order_image_{Order_no}_{timestamp}.png"
                combined_image.save(output_image_path)

                save_to_excel(st.session_state.details_list[0], excel_file_path)

                st.image(combined_image, caption="Combined Image")
                st.success(f"Order saved successfully! Combined image saved as {output_image_path}")

                img_buffer = BytesIO()
                combined_image.save(img_buffer, format="PNG")
                img_buffer.seek(0)
                st.download_button(
                    label="Download Combined Image",
                    data=img_buffer,
                    file_name=output_image_path,
                    mime="image/png"
                )
            else:
                save_to_excel(st.session_state.details_list[0], excel_file_path)
                st.success("Order details have been saved without an image.")

        # Reset details for next entry
        st.session_state.details_list = []


